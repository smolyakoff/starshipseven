<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	
	<Style x:Key="IconButtonStyle"
               TargetType="{x:Type Button}">
		<Style.Triggers>
			<Trigger Property="IsCancel" Value="False"/>
		</Style.Triggers>
            <!-- set some default values -->
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="BorderBrush"
                    Value="Transparent" />
            <!-- set the visual tree of the control -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <!-- here come the actual sub-controls -->
                        <Border x:Name="border"
                                Height="{TemplateBinding Height}"
                                Width="{TemplateBinding Width}"
                                SnapsToDevicePixels="True"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                Padding="0"
                                CornerRadius="3,3,3,3">
                            <Border x:Name="innerBorder"
                                    SnapsToDevicePixels="True"
                                    BorderThickness="1"
                                    Padding="2"
                                    CornerRadius="3,3,3,3">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  RecognizesAccessKey="True"
                                                  Margin="{TemplateBinding Padding}">
                                    <ContentPresenter.Effect>
                                        <!-- give the content a bit of shadow -->
                                        <DropShadowEffect x:Name="shadow"
                                                          ShadowDepth="2"
                                                          Opacity="0.7"
                                                          BlurRadius="3" />
                                    </ContentPresenter.Effect>
                                    <ContentPresenter.RenderTransform>
                                        <!-- push the content a bit to the left and the top -->
                                        <TranslateTransform x:Name="translation"
                                                            X="-1"
                                                            Y="-1" />
                                    </ContentPresenter.RenderTransform>
                                </ContentPresenter>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- 
                                the triggers define the reactions to various state
                                changes
                            -->
                            <Trigger Property="IsKeyboardFocused"
                                     Value="true">
                                <Setter TargetName="innerBorder"
                                        Property="BorderBrush"
                                        Value="#ff06cdff" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="true">
                                <Setter Property="Background"
                                        Value="{StaticResource ButtonBorderColor}" />
                            </Trigger>
                            <!-- when the control is disabled, just let the background shine through -->
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Opacity"
                                        Value="0.5" />
                            </Trigger>
                           
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
		

		
</ResourceDictionary>